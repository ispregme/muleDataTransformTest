<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:pop3="http://www.mulesoft.org/schema/mule/pop3" xmlns:imap="http://www.mulesoft.org/schema/mule/imap" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/imap http://www.mulesoft.org/schema/mule/imap/current/mule-imap.xsd
http://www.mulesoft.org/schema/mule/pop3 http://www.mulesoft.org/schema/mule/pop3/current/mule-pop3.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd">
    <db:mysql-config name="MySQL_Configuration" host="iap.c8rqb14cuaul.us-east-1.rds.amazonaws.com" port="3306" user="root" password="rootiap15" database="iap" doc:name="MySQL Configuration"/>
    <http:request-config name="HTTP_Request_Configuration" host="users.dsic.upv.es" port="80" doc:name="HTTP Request Configuration"/>
    <file:connector name="File" readFromDirectory="/Users/alejandro/Desktop/fileportafolio" autoDelete="true" streaming="true" validateConnections="true" doc:name="File">
        <file:expression-filename-parser/>
    </file:connector>
    <flow name="portafolio1Flow">
        <file:inbound-endpoint path="/Users/alejandro/Desktop/fileportafolio" connector-ref="File" responseTimeout="10000" doc:name="File"/>
        <set-variable value="#[header:originalFilename]" variableName="originalFilename" doc:name="Set originalFilename" />
        <set-variable value="#[org.apache.commons.io.FilenameUtils.getExtension(originalFilename)]" variableName="extension" doc:name="Set extension" />
        <choice doc:name="Choice">
            <when expression="#[flowVars['extension']]==csv">
                <file:file-to-string-transformer doc:name="File to String"/>
                <splitter expression="#[org.mule.util.StringUtils.split(message.payload, '\n\r')]" doc:name="deCSVaFilas"/>
                <expression-transformer expression="#[org.mule.util.StringUtils.split(message.payload, ',')]" doc:name="deFilasAColumnas"/>
                <db:insert config-ref="MySQL_Configuration" doc:name="toDatabase">
                    <db:parameterized-query><![CDATA[INSERT INTO locations(title, description, latitud, longitud)
VALUES(
	   #[message.payload[0]],
	   #[message.payload[1]],
	   #[message.payload[2]],
	   #[message.payload[3]]
)]]></db:parameterized-query>
                </db:insert>
            </when>
            <when expression="#[flowVars['extension']]==json">
                <json:json-to-object-transformer returnClass="java.util.List" mimeType="text/json" doc:name="JSON a JavaList"/>
                <collection-splitter doc:name="Collection Splitter"/>
                <db:insert config-ref="MySQL_Configuration" doc:name="Database">
                    <db:parameterized-query><![CDATA[INSERT INTO locations(title, description, latitud, longitud)
VALUES(
	   #[message.payload[0].properties.name],
	   #[message.payload[0].properties.desc],
	   #[message.payload[0].coordinates[0]],
	   #[message.payload[0].coordinates[1]]
)]]></db:parameterized-query>
                </db:insert>
            </when>
            <otherwise>
                <mulexml:xml-to-object-transformer doc:name="XML to Object"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="portafolio1Flow1">
        <poll doc:name="Poll">
            <http:request config-ref="" path="" method="" doc:name="HTTP"/>
        </poll>
        <choice doc:name="Choice">
            <when expression="">
                <object-to-string-transformer mimeType="text/csv" doc:name="Copy_of_Object to String"/>
                <splitter expression="#[org.mule.util.StringUtils.split(message.payload, '\n\r')]" doc:name="Copy_of_deCSVaFilas"/>
                <expression-transformer expression="#[org.mule.util.StringUtils.split(message.payload, ',')]" doc:name="Copy_of_deFilasAColumnas"/>
                <db:insert config-ref="MySQL_Configuration" doc:name="Copy_of_toDatabase">
                    <db:parameterized-query><![CDATA[INSERT INTO locations(title, description, latitud, longitud)
VALUES(
	   #[message.payload[0]],
	   #[message.payload[1]],
	   #[message.payload[2]],
	   #[message.payload[3]]
)]]></db:parameterized-query>
                </db:insert>
            </when>
            <when expression="">
                <json:json-to-object-transformer doc:name="JSON to Object"/>
            </when>
        </choice>
    </flow>
    <flow name="portafolio1Flow2">
        <pop3:inbound-endpoint host="localhost" responseTimeout="10000" doc:name="POP3"/>
        <choice doc:name="Choice">
            <when expression="">
                <object-to-string-transformer mimeType="text/csv" doc:name="Copy_of_Object to String"/>
                <splitter expression="#[org.mule.util.StringUtils.split(message.payload, '\n\r')]" doc:name="Copy_of_deCSVaFilas"/>
                <expression-transformer expression="#[org.mule.util.StringUtils.split(message.payload, ',')]" doc:name="Copy_of_deFilasAColumnas"/>
                <db:insert config-ref="MySQL_Configuration" doc:name="Copy_of_toDatabase">
                    <db:parameterized-query><![CDATA[INSERT INTO locations(title, description, latitud, longitud)
VALUES(
	   #[message.payload[0]],
	   #[message.payload[1]],
	   #[message.payload[2]],
	   #[message.payload[3]]
)]]></db:parameterized-query>
                </db:insert>
            </when>
            <when expression="">
                <json:json-to-object-transformer doc:name="JSON to Object"/>
            </when>
        </choice>
    </flow>
</mule>
