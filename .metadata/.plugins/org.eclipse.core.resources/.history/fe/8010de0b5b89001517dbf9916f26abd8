<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="users.dsic.upv.es" port="80" doc:name="HTTP Listener Configuration"/>

<flow name="portafolio1Flow1">
        <composite-source doc:name="Composite Source">
            <http:listener config-ref="HTTP_Listener_Configuration" path="/~jjfons/iap/ex1/coords.csv" doc:name="HTTP"/>
            <http:listener config-ref="HTTP_Listener_Configuration" path="/~jjfons/iap/ex1/coords.json" doc:name="HTTP"/>
            <http:listener config-ref="HTTP_Listener_Configuration" path="/~jjfons/iap/ex1/coords.kml" doc:name="HTTP"/>
        </composite-source>
        <choice doc:name="Copy_of_Choice">
            <when expression="#[message.inboundProperties.'http.request.path' == '/~jjfons/iap/ex1/coords.csv']">
                <object-to-string-transformer doc:name="Object to String"/>
                <splitter expression="#[org.mule.util.StringUtils.split(message.payload, '\n\r')]" doc:name="Copy_of_deCSVaFilas"/>
                <expression-transformer expression="#[org.mule.util.StringUtils.split(message.payload, ',')]" doc:name="Copy_of_deFilasAColumnas"/>
                <db:insert config-ref="MySQL_Configuration" doc:name="Copy_of_toDatabase">
                    <db:parameterized-query><![CDATA[INSERT INTO locations(title, description, latitud, longitud)
VALUES(
	   #[message.payload[0]],
	   #[message.payload[1]],
	   #[message.payload[2]],
	   #[message.payload[3]]
)]]></db:parameterized-query>
                </db:insert>
            </when>
            <when expression="#[message.inboundProperties.'http.request.path' == '/~jjfons/iap/ex1/coords.json']">
                <json:object-to-json-transformer doc:name="Object to JSON"/>
                <json:json-to-object-transformer returnClass="java.util.List" mimeType="text/json" doc:name="Copy_of_JSON a JavaList"/>
                <foreach collection="#[message.payload]" counterVariableName="counter1" doc:name="Copy_of_For Each">
                    <db:insert config-ref="MySQL_Configuration" doc:name="Copy_of_Database">
                        <db:parameterized-query><![CDATA[INSERT INTO locations(title, description, latitud, longitud)
VALUES(
	   #[payload.properties.name],
	   #[payload.properties.desc],
	   #[payload.coordinates[0]],
	   #[payload.coordinates[1]]
)]]></db:parameterized-query>
                    </db:insert>
                </foreach>
            </when>
            <otherwise>
                <mulexml:object-to-xml-transformer doc:name="Object to XML"/>
                <data-mapper:transform config-ref="XML_To_JSON" doc:name="Copy_of_XML To JSON"/>
                <json:json-to-object-transformer returnClass="java.util.List" mimeType="text/json" doc:name="Copy_of_JSON a JavaList"/>
                <foreach collection="#[message.payload]" counterVariableName="counter2" doc:name="Copy_of_For Each">
                    <db:insert config-ref="MySQL_Configuration" doc:name="Copy_of_Database">
                        <db:parameterized-query><![CDATA[INSERT INTO locations(title, description, latitud, longitud)
VALUES(
	   #[payload.name],
	   #[payload.description],
       #[org.mule.util.StringUtils.split(payload.Point.coordinates, ",")[0]],
	   #[org.mule.util.StringUtils.split(payload.Point.coordinates, ",")[1]]
)]]></db:parameterized-query>
                    </db:insert>
                </foreach>
            </otherwise>
        </choice>
    </flow>

</mule>

